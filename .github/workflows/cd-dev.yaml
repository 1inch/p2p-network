name: "CD Develop Environment"
env:
  DOCKER_VERSION: ${{ github.sha }}

on:
  push:
    branches:
      - 'dev'
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      configs: ${{ github.event_name == 'workflow_dispatch' || steps.changes.outputs.configs }}
      node_registry: ${{ github.event_name == 'workflow_dispatch' || steps.changes.outputs.node_registry }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Detect Changes
        uses: dorny/paths-filter@v3
        id: changes
        if: ${{ github.event_name != 'workflow_dispatch' }}
        with:
          filters: |
            configs:
              - 'assets/**'
            node_registry:
              - 'contracts/NodeRegistry.sol'

  build-relayer:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Relayer Image
        run: make build_relayer push_relayer VERSION=${{ env.DOCKER_VERSION }} ENVIRONMENT=-dev

  build-resolver:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Resolver Image
        run: make build_resolver push_resolver VERSION=${{ env.DOCKER_VERSION }} ENVIRONMENT=-dev

  configs-deploy:
    if: ${{ needs.detect-changes.outputs.configs == 'true' }}
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Deploy Configs
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USER_DEV }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "assets/*.yaml"
          target: ${{ secrets.PROJECT_CONFIG_PATH_DEV }}
          strip_components: 1

  node-registry-deploy:
    if: ${{ needs.detect-changes.outputs.node_registry == 'true' }}
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Deploy Node Registry
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          username: ${{ secrets.SSH_USER_DEV }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "contracts/NodeRegistry.sol"
          target: ${{ secrets.PROJECT_CONTRACT_PATH_DEV }}
          strip_components: 1

  deploy-services:
    if: ${{ always() }}
    needs: 
      - build-relayer 
      - build-resolver 
      - configs-deploy 
      - node-registry-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Images to DEV Environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEV }}
          port: 22
          username: ${{ secrets.SSH_USER_DEV }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH_DEV }}
            ./deploy.sh

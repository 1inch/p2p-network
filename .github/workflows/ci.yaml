name: CI

on:
  pull_request:
    branches:
      - 'main'
      - 'dev'
    types: [opened, synchronize, edited]
  push:
    branches:
      - 'main'
      - 'dev'

jobs:

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      configs: ${{ steps.changes.outputs.configs }}
      node_registry: ${{ steps.changes.outputs.node-registry }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Detect Changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            configs:
              - 'assets/**'
            node-registry:
              - 'contracts/NodeRegistry.sol'
      - name: Set Outputs as JSON
        if: github.ref == 'refs/heads/dev'
        run: |
          echo '{}' | jq \
            --arg configs "${{ steps.changes.outputs.configs }}" \
            --arg node_registry "${{ steps.changes.outputs.node-registry }}" \
            '. + {configs: $configs, "node-registry": $node_registry}' \
            > outputs.json
      - name: Upload Changes Artifact
        if: github.ref == 'refs/heads/dev'
        uses: actions/upload-artifact@v4
        with:
          name: project-changes
          path: outputs.json  

  verify_build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Linelint
        uses: fernandrone/linelint@0.0.6
        id: linelint

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'
          
      - name: Lint code
        uses: golangci/golangci-lint-action@v6.1.1
        with:
            version: latest
            install-mode: binary
            github-token: ${{ secrets.GITHUB_TOKEN }}
            only-new-issues: false
            skip-cache: false
            skip-save-cache: false
            problem-matchers: false
            cache-invalidation-interval: 7
  
      - name: Check compilation
        run: |
          make build
  
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'
      
      - name: Install node.js with npm
        uses: actions/setup-node@v4
        with:
          node-version: v22.11.0

      - name: Verify node.js Installation
        run: |
          node --version
          npm --version

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
       
      - name: Verify Bun Installation
        run: bun --version

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1.3.1

      - name: Verify Anvil Installation
        run: anvil --version

      - name: Start Anvil
        run: |
          make start-anvil

      - name: Deploy Contract
        run: |
          make deploy_contract

      - name: Register Resolver
        run: |
          make register_resolver

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@v1.12.0

      - name: Run relayer and resolver tests
        run: |
          make testsum

      - name: Build js script for test
        run: |
          cd sdk
          bun install
          bun build call_client_script.ts --outdir ./build --sourcemap=external

      - name: Install node.js dependenies
        run: |
          cd sdk
          npm i

      - name: Run SDK integration test
        run: |
          cd sdk
          xvfb-run --auto-servernum npm test

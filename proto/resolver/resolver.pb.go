// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.19.6
// source: resolver.proto

package resolver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum to represent standardized error codes.
type ErrorCode int32

const (
	ErrorCode_ERR_INVALID_MESSAGE_FORMAT        ErrorCode = 0 // Error in message format.
	ErrorCode_ERR_GRPC_EXECUTION_FAILED         ErrorCode = 1 // gRPC execution failure.
	ErrorCode_ERR_RESPONSE_SERIALIZATION_FAILED ErrorCode = 2 // Failed to serialize the response.
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ERR_INVALID_MESSAGE_FORMAT",
		1: "ERR_GRPC_EXECUTION_FAILED",
		2: "ERR_RESPONSE_SERIALIZATION_FAILED",
	}
	ErrorCode_value = map[string]int32{
		"ERR_INVALID_MESSAGE_FORMAT":        0,
		"ERR_GRPC_EXECUTION_FAILED":         1,
		"ERR_RESPONSE_SERIALIZATION_FAILED": 2,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_resolver_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_resolver_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_resolver_proto_rawDescGZIP(), []int{0}
}

// Represents a standard error structure.
type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ErrorCode              `protobuf:"varint,1,opt,name=code,proto3,enum=resolver.ErrorCode" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_resolver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_resolver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_resolver_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ERR_INVALID_MESSAGE_FORMAT
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResolverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Encrypted     bool                   `protobuf:"varint,2,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,4,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolverRequest) Reset() {
	*x = ResolverRequest{}
	mi := &file_resolver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolverRequest) ProtoMessage() {}

func (x *ResolverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resolver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolverRequest.ProtoReflect.Descriptor instead.
func (*ResolverRequest) Descriptor() ([]byte, []int) {
	return file_resolver_proto_rawDescGZIP(), []int{1}
}

func (x *ResolverRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResolverRequest) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (x *ResolverRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ResolverRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type ResolverResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Encrypted bool                   `protobuf:"varint,2,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ResolverResponse_Payload
	//	*ResolverResponse_Error
	Result        isResolverResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolverResponse) Reset() {
	*x = ResolverResponse{}
	mi := &file_resolver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolverResponse) ProtoMessage() {}

func (x *ResolverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resolver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolverResponse.ProtoReflect.Descriptor instead.
func (*ResolverResponse) Descriptor() ([]byte, []int) {
	return file_resolver_proto_rawDescGZIP(), []int{2}
}

func (x *ResolverResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResolverResponse) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (x *ResolverResponse) GetResult() isResolverResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ResolverResponse) GetPayload() []byte {
	if x != nil {
		if x, ok := x.Result.(*ResolverResponse_Payload); ok {
			return x.Payload
		}
	}
	return nil
}

func (x *ResolverResponse) GetError() *Error {
	if x != nil {
		if x, ok := x.Result.(*ResolverResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isResolverResponse_Result interface {
	isResolverResponse_Result()
}

type ResolverResponse_Payload struct {
	Payload []byte `protobuf:"bytes,3,opt,name=payload,proto3,oneof"`
}

type ResolverResponse_Error struct {
	Error *Error `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*ResolverResponse_Payload) isResolverResponse_Result() {}

func (*ResolverResponse_Error) isResolverResponse_Result() {}

var File_resolver_proto protoreflect.FileDescriptor

var file_resolver_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22,
	0x8f, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2a, 0x71, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e,
	0x0a, 0x1a, 0x45, 0x52, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x00, 0x12, 0x1d,
	0x0a, 0x19, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x25, 0x0a,
	0x21, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x53, 0x45,
	0x52, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x32, 0x4b, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12,
	0x40, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x31, 0x69, 0x6e, 0x63, 0x68, 0x2f, 0x70, 0x32, 0x70, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resolver_proto_rawDescOnce sync.Once
	file_resolver_proto_rawDescData = file_resolver_proto_rawDesc
)

func file_resolver_proto_rawDescGZIP() []byte {
	file_resolver_proto_rawDescOnce.Do(func() {
		file_resolver_proto_rawDescData = protoimpl.X.CompressGZIP(file_resolver_proto_rawDescData)
	})
	return file_resolver_proto_rawDescData
}

var file_resolver_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_resolver_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_resolver_proto_goTypes = []any{
	(ErrorCode)(0),           // 0: resolver.ErrorCode
	(*Error)(nil),            // 1: resolver.Error
	(*ResolverRequest)(nil),  // 2: resolver.ResolverRequest
	(*ResolverResponse)(nil), // 3: resolver.ResolverResponse
}
var file_resolver_proto_depIdxs = []int32{
	0, // 0: resolver.Error.code:type_name -> resolver.ErrorCode
	1, // 1: resolver.ResolverResponse.error:type_name -> resolver.Error
	2, // 2: resolver.Execute.Execute:input_type -> resolver.ResolverRequest
	3, // 3: resolver.Execute.Execute:output_type -> resolver.ResolverResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_resolver_proto_init() }
func file_resolver_proto_init() {
	if File_resolver_proto != nil {
		return
	}
	file_resolver_proto_msgTypes[2].OneofWrappers = []any{
		(*ResolverResponse_Payload)(nil),
		(*ResolverResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resolver_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_resolver_proto_goTypes,
		DependencyIndexes: file_resolver_proto_depIdxs,
		EnumInfos:         file_resolver_proto_enumTypes,
		MessageInfos:      file_resolver_proto_msgTypes,
	}.Build()
	File_resolver_proto = out.File
	file_resolver_proto_rawDesc = nil
	file_resolver_proto_goTypes = nil
	file_resolver_proto_depIdxs = nil
}
